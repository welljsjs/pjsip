name: CI/CD

on: [push]

jobs:
  build:

    runs-on: macOS-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Cache build directory
      id: cache_build_dir
      uses: actions/cache@v1
      env: 
        cache-name: cache-build-dir
      with: 
        path: ./build/ # Cache build dir
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('build/**') }} # No extra restore-keys, we only use the exact cache version
    - name: Build pjsip universal library
      if: steps.cache-build-dir.outputs.cache-hit == 'false'
      run: ./build.sh
    - name: Compress build directory to zip file
      run: zip -r libs build/
    - name: Check Tag
      id: check-tag
      run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
              echo ::set-output name=match::true
          else
            echo "Setting match to true anyway..."
            echo ::set-output name=match::true 
          fi
    - name: Check Tag Output
      if: steps.check-tag.outputs.match == 'true'
      run: |
        echo "Tag is a match"
    - name: Create Release
      id: create_release
      if: steps.check-tag.outputs.match == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
    - name: Upload Release Asset
      id: upload_release_asset
      if: steps.check-tag.outputs.match == 'true'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./libs.zip
        asset_name: libs_compiled.zip
        asset_content_type: application/zip

        
        
